{"version":3,"sources":["./src/app/view/app-view.component.ts","./src/app/view/app-view.component.html","./src/app/calendar/calendar.component.ts","./src/app/calendar/calendar.component.html","./src/environments/environment.ts","./src/app/config/config.service.ts","./src/app/app.component.ts","./src/app/calendar/calendar-item/calendar-item.component.ts","./src/app/calendar/calendar-item/calendar-item.component.html","./src/app/calendar/months-row/months-row.component.ts","./src/app/calendar/months-row/months-row.component.html","./src/app/app.module.ts","./src/app/calendar/pop-up/pop-up.component.ts","./src/app/calendar/pop-up/pop-up.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ConfigService, Commit, Response } from '../config/config.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './app-view.component.html',\n  styleUrls: ['./app-view.component.sass']\n})\nexport class AppViewComponent implements OnInit {\n  public response: Response\n  public requestForm = new FormGroup({\n    year: new FormControl('2019', Validators.required),\n    repoUrl: new FormControl('https://github.com/angular/angular', Validators.required),\n  })\n\n  constructor(private configService: ConfigService) {\n  }\n\n  public ngOnInit(): void {\n    this.getCommits()\n  }\n\n  private urlToLocation(repoUrl: string): string {\n    return repoUrl.replace(\"https://github.com/\", \"\")\n  }\n\n  //Retrieves the commits for the given repository in the specified year\n  public getCommits(): void {\n    //Define since and until dates\n    const sinceDate: Date = new Date(this.requestForm.value.year, 0, 1)\n    const untilDate: Date = new Date(Number(this.requestForm.value.year) + 1, 0, 1)\n\n    //Retrieve commits from ConfigService and assign them to response object\n    this.configService\n      .getData(this.urlToLocation(this.requestForm.value.repoUrl), sinceDate, untilDate)\n      .subscribe((commits: Commit[]) => {\n        this.response = {\n          year: this.requestForm.value.year,\n          commits: new Promise((resolve) => resolve(commits))\n        }\n    })\n  }\n\n}\n","<div class=\"position-block\">\n  <div class=\"d-flex\">\n    <img src=\"assets/github_logo.svg\" width=\"50px\"/>\n    <h2>Commits during</h2>\n    <form class=\"d-flex\" [formGroup]=\"requestForm\" (ngSubmit)=\"getCommits()\">\n      <input class=\"year\" type=number placeholder=\"Enter year\" formControlName=\"year\">\n      <h2>in repo</h2>\n      <input class=\"url\" type=string placeholder=\"Repo address\" formControlName=\"repoUrl\" (click)=\"$event.target.select()\">\n      <button class=\"submit-button\" type=\"submit\" [disabled]=\"!requestForm.valid\">\n        <h2 class=\"button-text\">â†µ Enter</h2>\n      </button>\n    </form>\n  </div>\n  <calendar\n    [response]=\"response\">\n  </calendar>\n</div>\n","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { Commit, Response } from '../config/config.service';\n\nexport interface CommitsRequest {\n  year: number;\n  repoUrl: string;\n}\n\nexport interface CalendarItem {\n  date: Date;\n  commits: any[];\n  percent: number;\n}\n\n@Component({\n  selector: 'calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.sass']\n})\nexport class CalendarComponent {\n  @Input() response: Response\n\n  public calendarItems: CalendarItem[]\n  public collection: Commit[]\n\n  // Define a lifecycle hook to handle changes to the component's input\n  public ngOnChanges(changes: SimpleChanges) {\n    if(changes.response && changes.response.currentValue) {\n      // When the response changes, fetch the commits and update the calendar items\n      this.response.commits.then((commits: Commit[]) => {\n        this.collection = commits\n        this.setItems(this.response.year).appendCommits(commits)\n      })\n    }\n  }\n\n  // A method to append commits to the calendar items\n  public appendCommits(commits: Commit[]): void {\n    this.calendarItems.forEach((calendarItem: CalendarItem, idx: number) => {\n      const commitsTmp: string[] = []\n      // For each calendar item, find any commits that occurred on that date\n      commits.forEach(({ commit: { committer: { date }}}) => {\n        if(date.substring(0,10) == calendarItem.date.toISOString().substring(0,10)) {\n          commitsTmp.push(date)\n          this.calendarItems[idx].commits = commitsTmp\n          this.calendarItems[idx].percent = Number.parseFloat(((commitsTmp.length / commits.length) * 100).toPrecision(2))\n        }\n      })\n    })\n  }\n\n  // A method to initialize the calendar items for a given year\n  public setItems(year: number): CalendarComponent {\n    this.calendarItems = []\n    for (let month = 1; month <= 12; month++) {\n      const numberOfDays: number = new Date(year, month, 0).getDate();\n      // For each month in the year, create calendar items for each day of the month\n      for (let date = 1; date <= numberOfDays; date++) {\n        const dateValue: Date = new Date(year, (month-1), date)\n        this.calendarItems.push({\n          date: dateValue,\n          commits: [],\n          percent: 0,\n        })\n      }\n    }\n    return this\n  }\n\n}\n","<div class=\"grid\">\n  <ng-container *ngFor=\"let calendarItem of calendarItems\">\n    <ng-container *ngIf=\"calendarItem.date.getDate() == 1\">\n      <months-row class=\"month-row\" [calendarMonth]=\"calendarItem.date\"></months-row>\n    </ng-container>\n    <calendar-item [calendarItem]=\"calendarItem\"></calendar-item>\n  </ng-container>\n</div>\n<ng-container *ngIf=\"collection && !collection.length\">\n  <h1 class=\"empty-state\">â›± Nothing here</h1>\n</ng-container>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Commit {\n  commit: {\n    committer: {\n      date: string;\n    };\n  };\n}\n\nexport interface Response {\n  year: number;\n  commits: Promise<Commit[]>;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  constructor( private httpClient: HttpClient ) { }\n\n  // Retrieve commit data from GitHub API for a specific repo within a date range\n  public getData(repoLocation: string, sinceDate: Date, untilDate: Date): Observable<Object> {\n    return this.httpClient.get(`https://api.github.com/repos/${repoLocation}/commits`, {\n      params: {\n        \"since\": `${sinceDate.toISOString()}`, // Start of date range\n        \"until\": `${untilDate.toISOString()}`, // End of date range\n        \"per_page\": \"500\", // Max number of commits to retrieve per page\n      },\n    })\n  }\n\n}\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template:`\n    <app-view></app-view>\n  `,\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'graph-app';\n}\n","import { Component, Input } from '@angular/core';\nimport { CalendarItem } from 'src/app/calendar/calendar.component';\n\n@Component({\n  selector: 'calendar-item',\n  templateUrl: './calendar-item.component.html',\n  styleUrls: ['./calendar-item.component.sass']\n})\nexport class CalendarItemComponent {\n  @Input() calendarItem: CalendarItem\n\n  public popUpVisibility: boolean = false\n\n}\n","<pop-up *ngIf=\"popUpVisibility\" [calendarItem]=\"calendarItem\"></pop-up>\n<div\n  (mouseenter)=\"popUpVisibility = true\"\n  (mouseleave)=\"popUpVisibility = false\"\n  class=\"calendar-item-component calendar-item\"\n  [class.empty]=\"!calendarItem.commits.length\"\n  [class.less-than-ten]=\"calendarItem.percent > 0 && calendarItem.percent < 10\"\n  [class.less-than-twenty]=\"calendarItem.percent >= 10 && calendarItem.percent < 20\"\n  [class.less-than-fourty]=\"calendarItem.percent >= 20 && calendarItem.percent < 40\"\n  [class.more-than-fourty]=\"calendarItem.percent >= 40\">\n</div>\n\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'months-row',\n  templateUrl: './months-row.component.html',\n  styleUrls: ['./months-row.component.sass']\n})\nexport class MonthsRowComponent {\n  private _month: string\n\n  @Input()\n  public set calendarMonth(date: Date) {\n    this._month = new Intl.DateTimeFormat('en-US', { month: 'short' }).format(date)\n  }\n\n  public get month(): string {\n    return this._month\n  }\n}\n","<p class=\"calendar-month\">{{month}}</p>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { AppViewComponent } from './view/app-view.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { CalendarItemComponent } from './calendar/calendar-item/calendar-item.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MonthsRowComponent } from './calendar/months-row/months-row.component';\nimport { PopUpComponent } from './calendar/pop-up/pop-up.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppViewComponent,\n    CalendarComponent,\n    CalendarItemComponent,\n    MonthsRowComponent,\n    PopUpComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CalendarItem } from 'src/app/calendar/calendar.component';\n\n@Component({\n  selector: 'pop-up',\n  templateUrl: './pop-up.component.html',\n  styleUrls: ['./pop-up.component.sass']\n})\nexport class PopUpComponent implements OnInit {\n  @Input() calendarItem: CalendarItem\n\n  ngOnInit() {}\n\n}\n","<div class=\"pop-up\">\n  <p>{{calendarItem.date.getDate()}}.{{calendarItem.date.getMonth()}}.{{calendarItem.date.getFullYear()}}</p>\n  <p>commits: {{calendarItem.commits.length}}</p>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}